<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.ssafy.enjoytrip.hotplace.mapper.HotplaceMapper">
	<resultMap type="hotplaceDto" id="hotplaceMap">
		<result column="hotplace_id" property="hotplaceId"/>
		<result column="hotplace_name" property="hotplaceName"/>
		<result column="hotplace_category" property="hotplaceCategory"/>
		<result column="hotplace_lag" property="hotplaceLag"/>
		<result column="hotplace_lat" property="hotplaceLat"/>
		<result column="hotplace_address" property="hotplaceAddress"/>
		<result column="hotplace_phone" property="hotplacePhone"/>
		<result column="hotplace_createdAt" property="hotplaceCreatedAt"/>
		<result column="hotplace_deletedAt" property="hotplaceDeletedAt"/>
	</resultMap>
	
	<sql id="search">
	    <choose>
	        <when test="filter == 'hotplaceName' and keyword != null">
	            where hotplace_name like concat('%', #{keyword}, '%')
	        </when>
	        <when test="filter == 'hotplaceCategory' and keyword != null">
	            where hotplace_category like concat('%', #{keyword}, '%')
	        </when>
	        <when test="filter == 'hotplaceValid'">
	            where hotplace_deletedAt is null
	        </when>
	    </choose>
	    <choose>
	        <when test="isDesc == true">
	            <if test="filter != 'hotplaceValid'">
	                order by
	                <choose>
	                    <when test="filter == 'hotplaceName'">
	                        hotplace_name desc
	                    </when>
	                    <when test="filter == 'hotplaceCategory'">
	                        hotplace_category desc
	                    </when>
	                    <otherwise>
	                        hotplace_createdAt desc
	                    </otherwise>
	                </choose>
	            </if>
	        </when>
	        <otherwise>
	            <if test="filter != 'hotplaceValid'">
	                order by
	                <choose>
	                    <when test="filter == 'hotplaceName'">
	                        hotplace_name asc
	                    </when>
	                    <when test="filter == 'hotplaceCategory'">
	                        hotplace_category asc
	                    </when>
	                    <otherwise>
	                        hotplace_createdAt asc
	                    </otherwise>
	                </choose>
	            </if>
	        </otherwise>
	    </choose>
	</sql>
	
	<select id="getAllHotplace" parameterType="listParams" resultMap="hotplaceMap">
	    select *
	    from hotplace
	    <include refid="search"/>    
	    limit #{start}, #{sizePerPage}
	</select>
	
	<select id="getTotalHotplace" parameterType="listParams" resultType="integer">
		select count(hotplace_id)
		from hotplace
		<include refid="search"/>
	</select>
	
	
	<select id="getHotplace" parameterType="string" resultMap="hotplaceMap">
		select *
		from hotplace
		where hotplace_id = #{hotplaceId}
	</select>
	
	<insert id="createHotplace" parameterType="hotplaceDto" >
		insert into hotplace(hotplace_id, hotplace_name, hotplace_category, hotplace_lag, hotplace_lat, hotplace_address, hotplace_phone)
		values (#{hotplaceId}, #{hotplaceName}, #{hotplaceCategory}, #{hotplaceLag}, #{hotplaceLat}, #{hotplaceAddress}, #{hotplacePhone})
	</insert>
	
	<delete id="deleteHotplace" parameterType="string">
		delete
		from hotplace
		where hotplace_id = #{hotplaceId}
	</delete>
	
	<select id="selectHotplaceWithReview" parameterType="searchRequest" resultMap="hotplaceMap">
		select h.hotplace_id, 
				h.hotplace_name,
				h.hotplace_category,
				h.hotplace_lag,
				h.hotplace_lat,
				h.hotplace_address,
				h.hotplace_phone,
				h.hotplace_createdAt,
				h.hotplace_deletedAt
		from 
		(select *
		from hotplace
		where hotplace_id = #{hotplaceId}) h 
			join
		(select *
		from review
		where member_id = #{memberId}) r
		on h.hotplace_id = r.hotplace_id
	
    </select>
</mapper>